//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DeployerModel", "FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Deployer2._0.AspNetUser), "AspNetUserClaims", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deployer2._0.AspNetUserClaim), true)]
[assembly: EdmRelationshipAttribute("DeployerModel", "FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Deployer2._0.AspNetUser), "AspNetUserLogins", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deployer2._0.AspNetUserLogin), true)]
[assembly: EdmRelationshipAttribute("DeployerModel", "AspNetUserRoles", "AspNetRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deployer2._0.AspNetRole), "AspNetUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deployer2._0.AspNetUser))]

#endregion

namespace Deployer2._0
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DeployerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DeployerEntities object using the connection string found in the 'DeployerEntities' section of the application configuration file.
        /// </summary>
        public DeployerEntities() : base("name=DeployerEntities", "DeployerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DeployerEntities object.
        /// </summary>
        public DeployerEntities(string connectionString) : base(connectionString, "DeployerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DeployerEntities object.
        /// </summary>
        public DeployerEntities(EntityConnection connection) : base(connection, "DeployerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<C__MigrationHistory> C__MigrationHistory
        {
            get
            {
                if ((_C__MigrationHistory == null))
                {
                    _C__MigrationHistory = base.CreateObjectSet<C__MigrationHistory>("C__MigrationHistory");
                }
                return _C__MigrationHistory;
            }
        }
        private ObjectSet<C__MigrationHistory> _C__MigrationHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetRole> AspNetRoles
        {
            get
            {
                if ((_AspNetRoles == null))
                {
                    _AspNetRoles = base.CreateObjectSet<AspNetRole>("AspNetRoles");
                }
                return _AspNetRoles;
            }
        }
        private ObjectSet<AspNetRole> _AspNetRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetUserClaim> AspNetUserClaims
        {
            get
            {
                if ((_AspNetUserClaims == null))
                {
                    _AspNetUserClaims = base.CreateObjectSet<AspNetUserClaim>("AspNetUserClaims");
                }
                return _AspNetUserClaims;
            }
        }
        private ObjectSet<AspNetUserClaim> _AspNetUserClaims;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetUserLogin> AspNetUserLogins
        {
            get
            {
                if ((_AspNetUserLogins == null))
                {
                    _AspNetUserLogins = base.CreateObjectSet<AspNetUserLogin>("AspNetUserLogins");
                }
                return _AspNetUserLogins;
            }
        }
        private ObjectSet<AspNetUserLogin> _AspNetUserLogins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetUser> AspNetUsers
        {
            get
            {
                if ((_AspNetUsers == null))
                {
                    _AspNetUsers = base.CreateObjectSet<AspNetUser>("AspNetUsers");
                }
                return _AspNetUsers;
            }
        }
        private ObjectSet<AspNetUser> _AspNetUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<database_firewall_rules> database_firewall_rules
        {
            get
            {
                if ((_database_firewall_rules == null))
                {
                    _database_firewall_rules = base.CreateObjectSet<database_firewall_rules>("database_firewall_rules");
                }
                return _database_firewall_rules;
            }
        }
        private ObjectSet<database_firewall_rules> _database_firewall_rules;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the C__MigrationHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToC__MigrationHistory(C__MigrationHistory c__MigrationHistory)
        {
            base.AddObject("C__MigrationHistory", c__MigrationHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAspNetRoles(AspNetRole aspNetRole)
        {
            base.AddObject("AspNetRoles", aspNetRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetUserClaims EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAspNetUserClaims(AspNetUserClaim aspNetUserClaim)
        {
            base.AddObject("AspNetUserClaims", aspNetUserClaim);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetUserLogins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAspNetUserLogins(AspNetUserLogin aspNetUserLogin)
        {
            base.AddObject("AspNetUserLogins", aspNetUserLogin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAspNetUsers(AspNetUser aspNetUser)
        {
            base.AddObject("AspNetUsers", aspNetUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the database_firewall_rules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodatabase_firewall_rules(database_firewall_rules database_firewall_rules)
        {
            base.AddObject("database_firewall_rules", database_firewall_rules);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeployerModel", Name="AspNetRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspNetRole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AspNetRole CreateAspNetRole(global::System.String id, global::System.String name)
        {
            AspNetRole aspNetRole = new AspNetRole();
            aspNetRole.Id = id;
            aspNetRole.Name = name;
            return aspNetRole;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeployerModel", "AspNetUserRoles", "AspNetUsers")]
        public EntityCollection<AspNetUser> AspNetUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetUser>("DeployerModel.AspNetUserRoles", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetUser>("DeployerModel.AspNetUserRoles", "AspNetUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeployerModel", Name="AspNetUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspNetUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="emailConfirmed">Initial value of the EmailConfirmed property.</param>
        /// <param name="phoneNumberConfirmed">Initial value of the PhoneNumberConfirmed property.</param>
        /// <param name="twoFactorEnabled">Initial value of the TwoFactorEnabled property.</param>
        /// <param name="lockoutEnabled">Initial value of the LockoutEnabled property.</param>
        /// <param name="accessFailedCount">Initial value of the AccessFailedCount property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static AspNetUser CreateAspNetUser(global::System.String id, global::System.Boolean emailConfirmed, global::System.Boolean phoneNumberConfirmed, global::System.Boolean twoFactorEnabled, global::System.Boolean lockoutEnabled, global::System.Int32 accessFailedCount, global::System.String userName)
        {
            AspNetUser aspNetUser = new AspNetUser();
            aspNetUser.Id = id;
            aspNetUser.EmailConfirmed = emailConfirmed;
            aspNetUser.PhoneNumberConfirmed = phoneNumberConfirmed;
            aspNetUser.TwoFactorEnabled = twoFactorEnabled;
            aspNetUser.LockoutEnabled = lockoutEnabled;
            aspNetUser.AccessFailedCount = accessFailedCount;
            aspNetUser.UserName = userName;
            return aspNetUser;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean EmailConfirmed
        {
            get
            {
                return _EmailConfirmed;
            }
            set
            {
                OnEmailConfirmedChanging(value);
                ReportPropertyChanging("EmailConfirmed");
                _EmailConfirmed = StructuralObject.SetValidValue(value, "EmailConfirmed");
                ReportPropertyChanged("EmailConfirmed");
                OnEmailConfirmedChanged();
            }
        }
        private global::System.Boolean _EmailConfirmed;
        partial void OnEmailConfirmedChanging(global::System.Boolean value);
        partial void OnEmailConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, true, "PasswordHash");
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityStamp
        {
            get
            {
                return _SecurityStamp;
            }
            set
            {
                OnSecurityStampChanging(value);
                ReportPropertyChanging("SecurityStamp");
                _SecurityStamp = StructuralObject.SetValidValue(value, true, "SecurityStamp");
                ReportPropertyChanged("SecurityStamp");
                OnSecurityStampChanged();
            }
        }
        private global::System.String _SecurityStamp;
        partial void OnSecurityStampChanging(global::System.String value);
        partial void OnSecurityStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true, "PhoneNumber");
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PhoneNumberConfirmed
        {
            get
            {
                return _PhoneNumberConfirmed;
            }
            set
            {
                OnPhoneNumberConfirmedChanging(value);
                ReportPropertyChanging("PhoneNumberConfirmed");
                _PhoneNumberConfirmed = StructuralObject.SetValidValue(value, "PhoneNumberConfirmed");
                ReportPropertyChanged("PhoneNumberConfirmed");
                OnPhoneNumberConfirmedChanged();
            }
        }
        private global::System.Boolean _PhoneNumberConfirmed;
        partial void OnPhoneNumberConfirmedChanging(global::System.Boolean value);
        partial void OnPhoneNumberConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TwoFactorEnabled
        {
            get
            {
                return _TwoFactorEnabled;
            }
            set
            {
                OnTwoFactorEnabledChanging(value);
                ReportPropertyChanging("TwoFactorEnabled");
                _TwoFactorEnabled = StructuralObject.SetValidValue(value, "TwoFactorEnabled");
                ReportPropertyChanged("TwoFactorEnabled");
                OnTwoFactorEnabledChanged();
            }
        }
        private global::System.Boolean _TwoFactorEnabled;
        partial void OnTwoFactorEnabledChanging(global::System.Boolean value);
        partial void OnTwoFactorEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LockoutEndDateUtc
        {
            get
            {
                return _LockoutEndDateUtc;
            }
            set
            {
                OnLockoutEndDateUtcChanging(value);
                ReportPropertyChanging("LockoutEndDateUtc");
                _LockoutEndDateUtc = StructuralObject.SetValidValue(value, "LockoutEndDateUtc");
                ReportPropertyChanged("LockoutEndDateUtc");
                OnLockoutEndDateUtcChanged();
            }
        }
        private Nullable<global::System.DateTime> _LockoutEndDateUtc;
        partial void OnLockoutEndDateUtcChanging(Nullable<global::System.DateTime> value);
        partial void OnLockoutEndDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LockoutEnabled
        {
            get
            {
                return _LockoutEnabled;
            }
            set
            {
                OnLockoutEnabledChanging(value);
                ReportPropertyChanging("LockoutEnabled");
                _LockoutEnabled = StructuralObject.SetValidValue(value, "LockoutEnabled");
                ReportPropertyChanged("LockoutEnabled");
                OnLockoutEnabledChanged();
            }
        }
        private global::System.Boolean _LockoutEnabled;
        partial void OnLockoutEnabledChanging(global::System.Boolean value);
        partial void OnLockoutEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccessFailedCount
        {
            get
            {
                return _AccessFailedCount;
            }
            set
            {
                OnAccessFailedCountChanging(value);
                ReportPropertyChanging("AccessFailedCount");
                _AccessFailedCount = StructuralObject.SetValidValue(value, "AccessFailedCount");
                ReportPropertyChanged("AccessFailedCount");
                OnAccessFailedCountChanged();
            }
        }
        private global::System.Int32 _AccessFailedCount;
        partial void OnAccessFailedCountChanging(global::System.Int32 value);
        partial void OnAccessFailedCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeployerModel", "FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUserClaims")]
        public EntityCollection<AspNetUserClaim> AspNetUserClaims
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetUserClaim>("DeployerModel.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUserClaims");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetUserClaim>("DeployerModel.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUserClaims", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeployerModel", "FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUserLogins")]
        public EntityCollection<AspNetUserLogin> AspNetUserLogins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetUserLogin>("DeployerModel.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUserLogins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetUserLogin>("DeployerModel.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUserLogins", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeployerModel", "AspNetUserRoles", "AspNetRoles")]
        public EntityCollection<AspNetRole> AspNetRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetRole>("DeployerModel.AspNetUserRoles", "AspNetRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetRole>("DeployerModel.AspNetUserRoles", "AspNetRoles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeployerModel", Name="AspNetUserClaim")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetUserClaim : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspNetUserClaim object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static AspNetUserClaim CreateAspNetUserClaim(global::System.Int32 id, global::System.String userId)
        {
            AspNetUserClaim aspNetUserClaim = new AspNetUserClaim();
            aspNetUserClaim.Id = id;
            aspNetUserClaim.UserId = userId;
            return aspNetUserClaim;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimType
        {
            get
            {
                return _ClaimType;
            }
            set
            {
                OnClaimTypeChanging(value);
                ReportPropertyChanging("ClaimType");
                _ClaimType = StructuralObject.SetValidValue(value, true, "ClaimType");
                ReportPropertyChanged("ClaimType");
                OnClaimTypeChanged();
            }
        }
        private global::System.String _ClaimType;
        partial void OnClaimTypeChanging(global::System.String value);
        partial void OnClaimTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimValue
        {
            get
            {
                return _ClaimValue;
            }
            set
            {
                OnClaimValueChanging(value);
                ReportPropertyChanging("ClaimValue");
                _ClaimValue = StructuralObject.SetValidValue(value, true, "ClaimValue");
                ReportPropertyChanged("ClaimValue");
                OnClaimValueChanged();
            }
        }
        private global::System.String _ClaimValue;
        partial void OnClaimValueChanging(global::System.String value);
        partial void OnClaimValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeployerModel", "FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers")]
        public AspNetUser AspNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("DeployerModel.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("DeployerModel.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUser> AspNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("DeployerModel.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspNetUser>("DeployerModel.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeployerModel", Name="AspNetUserLogin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetUserLogin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspNetUserLogin object.
        /// </summary>
        /// <param name="loginProvider">Initial value of the LoginProvider property.</param>
        /// <param name="providerKey">Initial value of the ProviderKey property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static AspNetUserLogin CreateAspNetUserLogin(global::System.String loginProvider, global::System.String providerKey, global::System.String userId)
        {
            AspNetUserLogin aspNetUserLogin = new AspNetUserLogin();
            aspNetUserLogin.LoginProvider = loginProvider;
            aspNetUserLogin.ProviderKey = providerKey;
            aspNetUserLogin.UserId = userId;
            return aspNetUserLogin;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginProvider
        {
            get
            {
                return _LoginProvider;
            }
            set
            {
                if (_LoginProvider != value)
                {
                    OnLoginProviderChanging(value);
                    ReportPropertyChanging("LoginProvider");
                    _LoginProvider = StructuralObject.SetValidValue(value, false, "LoginProvider");
                    ReportPropertyChanged("LoginProvider");
                    OnLoginProviderChanged();
                }
            }
        }
        private global::System.String _LoginProvider;
        partial void OnLoginProviderChanging(global::System.String value);
        partial void OnLoginProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProviderKey
        {
            get
            {
                return _ProviderKey;
            }
            set
            {
                if (_ProviderKey != value)
                {
                    OnProviderKeyChanging(value);
                    ReportPropertyChanging("ProviderKey");
                    _ProviderKey = StructuralObject.SetValidValue(value, false, "ProviderKey");
                    ReportPropertyChanged("ProviderKey");
                    OnProviderKeyChanged();
                }
            }
        }
        private global::System.String _ProviderKey;
        partial void OnProviderKeyChanging(global::System.String value);
        partial void OnProviderKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, false, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeployerModel", "FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers")]
        public AspNetUser AspNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("DeployerModel.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("DeployerModel.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUser> AspNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("DeployerModel.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspNetUser>("DeployerModel.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeployerModel", Name="C__MigrationHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class C__MigrationHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new C__MigrationHistory object.
        /// </summary>
        /// <param name="migrationId">Initial value of the MigrationId property.</param>
        /// <param name="contextKey">Initial value of the ContextKey property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="productVersion">Initial value of the ProductVersion property.</param>
        public static C__MigrationHistory CreateC__MigrationHistory(global::System.String migrationId, global::System.String contextKey, global::System.Byte[] model, global::System.String productVersion)
        {
            C__MigrationHistory c__MigrationHistory = new C__MigrationHistory();
            c__MigrationHistory.MigrationId = migrationId;
            c__MigrationHistory.ContextKey = contextKey;
            c__MigrationHistory.Model = model;
            c__MigrationHistory.ProductVersion = productVersion;
            return c__MigrationHistory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MigrationId
        {
            get
            {
                return _MigrationId;
            }
            set
            {
                if (_MigrationId != value)
                {
                    OnMigrationIdChanging(value);
                    ReportPropertyChanging("MigrationId");
                    _MigrationId = StructuralObject.SetValidValue(value, false, "MigrationId");
                    ReportPropertyChanged("MigrationId");
                    OnMigrationIdChanged();
                }
            }
        }
        private global::System.String _MigrationId;
        partial void OnMigrationIdChanging(global::System.String value);
        partial void OnMigrationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContextKey
        {
            get
            {
                return _ContextKey;
            }
            set
            {
                if (_ContextKey != value)
                {
                    OnContextKeyChanging(value);
                    ReportPropertyChanging("ContextKey");
                    _ContextKey = StructuralObject.SetValidValue(value, false, "ContextKey");
                    ReportPropertyChanged("ContextKey");
                    OnContextKeyChanged();
                }
            }
        }
        private global::System.String _ContextKey;
        partial void OnContextKeyChanging(global::System.String value);
        partial void OnContextKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Model
        {
            get
            {
                return StructuralObject.GetValidValue(_Model);
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false, "Model");
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.Byte[] _Model;
        partial void OnModelChanging(global::System.Byte[] value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductVersion
        {
            get
            {
                return _ProductVersion;
            }
            set
            {
                OnProductVersionChanging(value);
                ReportPropertyChanging("ProductVersion");
                _ProductVersion = StructuralObject.SetValidValue(value, false, "ProductVersion");
                ReportPropertyChanged("ProductVersion");
                OnProductVersionChanged();
            }
        }
        private global::System.String _ProductVersion;
        partial void OnProductVersionChanging(global::System.String value);
        partial void OnProductVersionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeployerModel", Name="database_firewall_rules")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class database_firewall_rules : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new database_firewall_rules object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="start_ip_address">Initial value of the start_ip_address property.</param>
        /// <param name="end_ip_address">Initial value of the end_ip_address property.</param>
        /// <param name="create_date">Initial value of the create_date property.</param>
        /// <param name="modify_date">Initial value of the modify_date property.</param>
        public static database_firewall_rules Createdatabase_firewall_rules(global::System.Int32 id, global::System.String name, global::System.String start_ip_address, global::System.String end_ip_address, global::System.DateTime create_date, global::System.DateTime modify_date)
        {
            database_firewall_rules database_firewall_rules = new database_firewall_rules();
            database_firewall_rules.id = id;
            database_firewall_rules.name = name;
            database_firewall_rules.start_ip_address = start_ip_address;
            database_firewall_rules.end_ip_address = end_ip_address;
            database_firewall_rules.create_date = create_date;
            database_firewall_rules.modify_date = modify_date;
            return database_firewall_rules;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                if (_name != value)
                {
                    OnnameChanging(value);
                    ReportPropertyChanging("name");
                    _name = StructuralObject.SetValidValue(value, false, "name");
                    ReportPropertyChanged("name");
                    OnnameChanged();
                }
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String start_ip_address
        {
            get
            {
                return _start_ip_address;
            }
            set
            {
                if (_start_ip_address != value)
                {
                    Onstart_ip_addressChanging(value);
                    ReportPropertyChanging("start_ip_address");
                    _start_ip_address = StructuralObject.SetValidValue(value, false, "start_ip_address");
                    ReportPropertyChanged("start_ip_address");
                    Onstart_ip_addressChanged();
                }
            }
        }
        private global::System.String _start_ip_address;
        partial void Onstart_ip_addressChanging(global::System.String value);
        partial void Onstart_ip_addressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String end_ip_address
        {
            get
            {
                return _end_ip_address;
            }
            set
            {
                if (_end_ip_address != value)
                {
                    Onend_ip_addressChanging(value);
                    ReportPropertyChanging("end_ip_address");
                    _end_ip_address = StructuralObject.SetValidValue(value, false, "end_ip_address");
                    ReportPropertyChanged("end_ip_address");
                    Onend_ip_addressChanged();
                }
            }
        }
        private global::System.String _end_ip_address;
        partial void Onend_ip_addressChanging(global::System.String value);
        partial void Onend_ip_addressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime create_date
        {
            get
            {
                return _create_date;
            }
            set
            {
                if (_create_date != value)
                {
                    Oncreate_dateChanging(value);
                    ReportPropertyChanging("create_date");
                    _create_date = StructuralObject.SetValidValue(value, "create_date");
                    ReportPropertyChanged("create_date");
                    Oncreate_dateChanged();
                }
            }
        }
        private global::System.DateTime _create_date;
        partial void Oncreate_dateChanging(global::System.DateTime value);
        partial void Oncreate_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime modify_date
        {
            get
            {
                return _modify_date;
            }
            set
            {
                if (_modify_date != value)
                {
                    Onmodify_dateChanging(value);
                    ReportPropertyChanging("modify_date");
                    _modify_date = StructuralObject.SetValidValue(value, "modify_date");
                    ReportPropertyChanged("modify_date");
                    Onmodify_dateChanged();
                }
            }
        }
        private global::System.DateTime _modify_date;
        partial void Onmodify_dateChanging(global::System.DateTime value);
        partial void Onmodify_dateChanged();

        #endregion

    }

    #endregion

}
